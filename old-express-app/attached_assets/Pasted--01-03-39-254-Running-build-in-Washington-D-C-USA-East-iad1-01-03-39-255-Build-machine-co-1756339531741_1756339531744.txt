[01:03:39.254] Running build in Washington, D.C., USA (East) â€“ iad1
[01:03:39.255] Build machine configuration: 2 cores, 8 GB
[01:03:39.272] Cloning github.com/marhthing/Whatsapp (Branch: main, Commit: 22782f3)
[01:03:39.450] Previous build caches not available
[01:03:39.753] Cloning completed: 481.000ms
[01:03:40.061] Running "vercel build"
[01:03:40.468] Vercel CLI 46.0.5
[01:03:40.647] WARN! Due to `builds` existing in your configuration file, the Build and Development Settings defined in your Project Settings will not apply. Learn More: https://vercel.link/unused-build-settings
[01:03:41.215] Installing dependencies...
[01:04:11.651] 
[01:04:11.651] added 342 packages in 30s
[01:04:11.652] 
[01:04:11.652] 47 packages are looking for funding
[01:04:11.652]   run `npm fund` for details
[01:04:11.717] Running "npm run build"
[01:04:11.827] 
[01:04:11.828] > whatsapp-session-frontend@0.0.0 build
[01:04:11.828] > tsc && vite build
[01:04:11.828] 
[01:04:11.972] Version 5.6.3
[01:04:11.975] tsc: The TypeScript Compiler - Version 5.6.3
[01:04:11.975] 
[01:04:11.975] COMMON COMMANDS
[01:04:11.976] 
[01:04:11.976]   tsc
[01:04:11.976]   Compiles the current project (tsconfig.json in the working directory.)
[01:04:11.976] 
[01:04:11.977]   tsc app.ts util.ts
[01:04:11.977]   Ignoring tsconfig.json, compiles the specified files with default compiler options.
[01:04:11.977] 
[01:04:11.977]   tsc -b
[01:04:11.977]   Build a composite project in the working directory.
[01:04:11.980] 
[01:04:11.980]   tsc --init
[01:04:11.980]   Creates a tsconfig.json with the recommended settings in the working directory.
[01:04:11.980] 
[01:04:11.980]   tsc -p ./path/to/tsconfig.json
[01:04:11.981]   Compiles the TypeScript project located at the specified path.
[01:04:11.981] 
[01:04:11.981]   tsc --help --all
[01:04:11.981]   An expanded version of this information, showing all possible compiler options
[01:04:11.982] 
[01:04:11.983]   tsc --noEmit
[01:04:11.983]   tsc --target esnext
[01:04:11.983]   Compiles the current project, with additional settings.
[01:04:11.983] 
[01:04:11.983] COMMAND LINE FLAGS
[01:04:11.983] 
[01:04:11.984] --help, -h
[01:04:11.984] Print this message.
[01:04:11.984] 
[01:04:11.984] --watch, -w
[01:04:11.985] Watch input files.
[01:04:11.985] 
[01:04:11.986] --all
[01:04:11.986] Show all compiler options.
[01:04:11.986] 
[01:04:11.986] --version, -v
[01:04:11.986] Print the compiler's version.
[01:04:11.986] 
[01:04:11.987] --init
[01:04:11.987] Initializes a TypeScript project and creates a tsconfig.json file.
[01:04:11.987] 
[01:04:11.987] --project, -p
[01:04:11.987] Compile the project given the path to its configuration file, or to a folder with a 'tsconfig.json'.
[01:04:11.987] 
[01:04:11.987] --build, -b
[01:04:11.988] Build one or more projects and their dependencies, if out of date
[01:04:11.988] 
[01:04:11.988] --showConfig
[01:04:11.988] Print the final configuration instead of building.
[01:04:11.988] 
[01:04:11.989] COMMON COMPILER OPTIONS
[01:04:11.989] 
[01:04:11.989] --pretty
[01:04:11.989] Enable color and formatting in TypeScript's output to make compiler errors easier to read.
[01:04:11.989] type: boolean
[01:04:11.990] default: true
[01:04:11.990] 
[01:04:11.990] --declaration, -d
[01:04:11.990] Generate .d.ts files from TypeScript and JavaScript files in your project.
[01:04:11.990] type: boolean
[01:04:11.990] default: `false`, unless `composite` is set
[01:04:11.991] 
[01:04:11.991] --declarationMap
[01:04:11.991] Create sourcemaps for d.ts files.
[01:04:11.991] type: boolean
[01:04:11.991] default: false
[01:04:11.991] 
[01:04:11.991] --emitDeclarationOnly
[01:04:11.992] Only output d.ts files and not JavaScript files.
[01:04:11.992] type: boolean
[01:04:11.992] default: false
[01:04:11.992] 
[01:04:11.992] --sourceMap
[01:04:11.992] Create source map files for emitted JavaScript files.
[01:04:11.993] type: boolean
[01:04:11.993] default: false
[01:04:11.993] 
[01:04:11.993] --noEmit
[01:04:11.993] Disable emitting files from a compilation.
[01:04:11.994] type: boolean
[01:04:11.994] default: false
[01:04:11.994] 
[01:04:11.994] --target, -t
[01:04:11.994] Set the JavaScript language version for emitted JavaScript and include compatible library declarations.
[01:04:11.994] one of: es5, es6/es2015, es2016, es2017, es2018, es2019, es2020, es2021, es2022, es2023, esnext
[01:04:11.994] default: es5
[01:04:11.995] 
[01:04:11.995] --module, -m
[01:04:11.995] Specify what module code is generated.
[01:04:11.995] one of: none, commonjs, amd, umd, system, es6/es2015, es2020, es2022, esnext, node16, nodenext, preserve
[01:04:11.995] default: undefined
[01:04:11.995] 
[01:04:11.995] --lib
[01:04:11.996] Specify a set of bundled library declaration files that describe the target runtime environment.
[01:04:11.996] one or more: es5, es6/es2015, es7/es2016, es2017, es2018, es2019, es2020, es2021, es2022, es2023, esnext, dom, dom.iterable, dom.asynciterable, webworker, webworker.importscripts, webworker.iterable, webworker.asynciterable, scripthost, es2015.core, es2015.collection, es2015.generator, es2015.iterable, es2015.promise, es2015.proxy, es2015.reflect, es2015.symbol, es2015.symbol.wellknown, es2016.array.include, es2016.intl, es2017.date, es2017.object, es2017.sharedmemory, es2017.string, es2017.intl, es2017.typedarrays, es2018.asyncgenerator, es2018.asynciterable/esnext.asynciterable, es2018.intl, es2018.promise, es2018.regexp, es2019.array, es2019.object, es2019.string, es2019.symbol/esnext.symbol, es2019.intl, es2020.bigint/esnext.bigint, es2020.date, es2020.promise, es2020.sharedmemory, es2020.string, es2020.symbol.wellknown, es2020.intl, es2020.number, es2021.promise, es2021.string, es2021.weakref/esnext.weakref, es2021.intl, es2022.array, es2022.error, es2022.intl, es2022.object, es2022.sharedmemory, es2022.string, es2022.regexp, es2023.array, es2023.collection, es2023.intl, esnext.array, esnext.collection, esnext.intl, esnext.disposable, esnext.string, esnext.promise, esnext.decorators, esnext.object, esnext.regexp, esnext.iterator, decorators, decorators.legacy
[01:04:11.998] default: undefined
[01:04:11.998] 
[01:04:11.998] --allowJs
[01:04:11.998] Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files.
[01:04:11.998] type: boolean
[01:04:11.998] default: false
[01:04:11.999] 
[01:04:11.999] --checkJs
[01:04:11.999] Enable error reporting in type-checked JavaScript files.
[01:04:11.999] type: boolean
[01:04:11.999] default: false
[01:04:11.999] 
[01:04:11.999] --jsx
[01:04:12.000] Specify what JSX code is generated.
[01:04:12.003] one of: preserve, react, react-native, react-jsx, react-jsxdev
[01:04:12.004] default: undefined
[01:04:12.004] 
[01:04:12.004] --outFile
[01:04:12.004] Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output.
[01:04:12.004] 
[01:04:12.004] --outDir
[01:04:12.004] Specify an output folder for all emitted files.
[01:04:12.005] 
[01:04:12.005] --removeComments
[01:04:12.005] Disable emitting comments.
[01:04:12.005] type: boolean
[01:04:12.005] default: false
[01:04:12.005] 
[01:04:12.005] --strict
[01:04:12.005] Enable all strict type-checking options.
[01:04:12.005] type: boolean
[01:04:12.005] default: false
[01:04:12.005] 
[01:04:12.005] --types
[01:04:12.006] Specify type package names to be included without being referenced in a source file.
[01:04:12.006] 
[01:04:12.006] --esModuleInterop
[01:04:12.006] Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility.
[01:04:12.006] type: boolean
[01:04:12.006] default: false
[01:04:12.006] 
[01:04:12.006] You can learn about all of the compiler options at https://aka.ms/tsc
[01:04:12.006] 
[01:04:12.006] Error: Command "npm run build" exited with 1